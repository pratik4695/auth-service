# Generated by Django 4.0.3 on 2022-03-05 23:45

import core.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djchoices.choices
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('email_hash', models.CharField(max_length=255)),
                ('email_encrypted', models.CharField(max_length=255)),
                ('mobile_hash', models.CharField(blank=True, db_index=True, max_length=64, null=True)),
                ('mobile_encrypted', models.CharField(blank=True, max_length=255, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[core.validators.age_validator])),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True, validators=[djchoices.choices.ChoicesValidator({'F': 'Female', 'M': 'Male'})])),
                ('is_active', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_on', models.DateTimeField(null=True)),
                ('user_type', models.CharField(choices=[('BT', 'Beta'), ('PR', 'Permanent')], default='PR', max_length=5, validators=[djchoices.choices.ChoicesValidator({'BT': 'Beta', 'PR': 'Permanent'})])),
                ('is_admin', models.BooleanField(default=False)),
                ('email_subscribed', models.BooleanField(default=True, verbose_name='Transactional email setting')),
                ('sms_subscribed', models.BooleanField(default=True, verbose_name='Transactional sms setting')),
                ('whatsapp_subscribed', models.BooleanField(null=True, verbose_name='Transactional/Marketing whatsapp setting')),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('hi', 'Hindi')], default='en', max_length=2, validators=[djchoices.choices.ChoicesValidator({'en': 'English', 'hi': 'Hindi'})])),
                ('mobile_verified', models.BooleanField(default=False)),
                ('mobile_verified_on', model_utils.fields.MonitorField(blank=True, default=None, monitor='mobile_verified', null=True, when={True})),
                ('email_verified', models.BooleanField(default=False)),
                ('email_verified_on', model_utils.fields.MonitorField(blank=True, default=None, monitor='email_verified', null=True, when={True})),
                ('email_exists', models.BooleanField(default=True)),
                ('last_visit', models.DateTimeField(auto_now_add=True, null=True)),
                ('password_exists', models.BooleanField(default=True)),
                ('deleted_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='deleted_users', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserJWTToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('access_token', models.CharField(max_length=400)),
                ('refresh_token', models.CharField(max_length=400)),
                ('expires', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('action', models.CharField(choices=[('MOBILE_ADDED', 'New Mobile Added'), ('MOBILE_CHANGED', 'Mobile Changed'), ('MOBILE_VERIFIED', 'Mobile Verified'), ('MOBILE_UNVERIFIED', 'Mobile UnVerified'), ('MOBILE_NULL', 'Mobile Null'), ('MOBILE_DEAD', 'Mobile Dead'), ('EMAIL_ADDED', 'New Email Added'), ('EMAIL_CHANGED', 'Email Changed'), ('EMAIL_VERIFIED', 'Email Verified'), ('EMAIL_UNVERIFIED', 'Email UnVerified'), ('EMAIL_RANDOM', 'Random email set'), ('SMS_SUBSCRIBED', 'SMS Subscribed'), ('SMS_UNSUBSCRIBED', 'SMS Unsubcribed'), ('PROMO_SMS_SUBSCRIBED', 'Promo SMS Subscribed'), ('PROMO_SMS_UNSUBSCRIBED', 'Promo SMS Unsubcribed'), ('EMAIL_SUBSCRIBED', 'Email subscribed'), ('EMAIL_UNSUBSCRIBED', 'Email Unsubscribed'), ('PROMO_EMAIL_SUBSCRIBED', 'Promo Email subscribed'), ('PROMO_EMAIL_UNSUBSCRIBED', 'Promo Email Unsubscribed'), ('SYSTEM_EMAIL_SUBSCRIBED', 'System Email subscribed'), ('SYSTEM_EMAIL_UNSUBSCRIBED', 'System Email Unsubscribed'), ('ACTIVATED', 'User Activated'), ('DEACTIVATED', 'User Deactivated'), ('REACTIVATED', 'User Reactivated'), ('PASSWORD_CHANGED', 'Password Changed'), ('WHATSAPP_SUBSCRIBED', 'WhatsApp subscribed'), ('WHATSAPP_UNSUBSCRIBED', 'WhatsApp Unsubscribed'), ('WHATSAPP_SUBSCRIBED_FAILED', 'WhatsApp Subscribed Failed'), ('WHATSAPP_UNSUBSCRIBED_FAILED', 'WhatsApp Unsubscribed Failed'), ('WHATSAPP_CHATBOT_SUBSCRIBED', 'WhatsApp chatbot subscribed'), ('WHATSAPP_CHATBOT_UNSUBSCRIBED', 'WhatsApp chatbot Unsubscribed'), ('WHATSAPP_CHATBOT_SUBSCRIBED_FAILED', 'WhatsApp chatbot Subscribed Failed'), ('WHATSAPP_CHATBOT_UNSUBSCRIBED_FAILED', 'WhatsApp chatbot Unsubscribed Failed')], max_length=65, validators=[djchoices.choices.ChoicesValidator({'ACTIVATED': 'User Activated', 'DEACTIVATED': 'User Deactivated', 'EMAIL_ADDED': 'New Email Added', 'EMAIL_CHANGED': 'Email Changed', 'EMAIL_RANDOM': 'Random email set', 'EMAIL_SUBSCRIBED': 'Email subscribed', 'EMAIL_UNSUBSCRIBED': 'Email Unsubscribed', 'EMAIL_UNVERIFIED': 'Email UnVerified', 'EMAIL_VERIFIED': 'Email Verified', 'MOBILE_ADDED': 'New Mobile Added', 'MOBILE_CHANGED': 'Mobile Changed', 'MOBILE_DEAD': 'Mobile Dead', 'MOBILE_NULL': 'Mobile Null', 'MOBILE_UNVERIFIED': 'Mobile UnVerified', 'MOBILE_VERIFIED': 'Mobile Verified', 'PASSWORD_CHANGED': 'Password Changed', 'PROMO_EMAIL_SUBSCRIBED': 'Promo Email subscribed', 'PROMO_EMAIL_UNSUBSCRIBED': 'Promo Email Unsubscribed', 'PROMO_SMS_SUBSCRIBED': 'Promo SMS Subscribed', 'PROMO_SMS_UNSUBSCRIBED': 'Promo SMS Unsubcribed', 'REACTIVATED': 'User Reactivated', 'SMS_SUBSCRIBED': 'SMS Subscribed', 'SMS_UNSUBSCRIBED': 'SMS Unsubcribed', 'SYSTEM_EMAIL_SUBSCRIBED': 'System Email subscribed', 'SYSTEM_EMAIL_UNSUBSCRIBED': 'System Email Unsubscribed', 'WHATSAPP_CHATBOT_SUBSCRIBED': 'WhatsApp chatbot subscribed', 'WHATSAPP_CHATBOT_SUBSCRIBED_FAILED': 'WhatsApp chatbot Subscribed Failed', 'WHATSAPP_CHATBOT_UNSUBSCRIBED': 'WhatsApp chatbot Unsubscribed', 'WHATSAPP_CHATBOT_UNSUBSCRIBED_FAILED': 'WhatsApp chatbot Unsubscribed Failed', 'WHATSAPP_SUBSCRIBED': 'WhatsApp subscribed', 'WHATSAPP_SUBSCRIBED_FAILED': 'WhatsApp Subscribed Failed', 'WHATSAPP_UNSUBSCRIBED': 'WhatsApp Unsubscribed', 'WHATSAPP_UNSUBSCRIBED_FAILED': 'WhatsApp Unsubscribed Failed'})])),
                ('pre_value', models.CharField(blank=True, max_length=255, null=True)),
                ('post_value', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserActivationKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('activation_otp', models.CharField(blank=True, max_length=5, null=True)),
                ('activation_otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('activation_code', models.CharField(blank=True, max_length=255, null=True)),
                ('activation_code_expiry', models.DateTimeField(blank=True, null=True)),
                ('login_otp', models.CharField(blank=True, max_length=255, null=True)),
                ('login_otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('password_otp', models.CharField(blank=True, max_length=255, null=True)),
                ('password_otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('access_otp', models.CharField(blank=True, max_length=255, null=True)),
                ('access_otp_expiry', models.DateTimeField(blank=True, null=True)),
                ('password_reset_code', models.CharField(blank=True, max_length=255, null=True)),
                ('password_reset_code_expiry', models.DateTimeField(blank=True, null=True)),
                ('temp_email', models.CharField(blank=True, max_length=100, null=True)),
                ('temp_mobile', models.CharField(blank=True, max_length=11, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reset_code', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
